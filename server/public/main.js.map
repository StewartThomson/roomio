{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dash/dash.component.css","webpack:///./src/app/dash/dash.component.html","webpack:///./src/app/dash/dash.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/room-view/room-view.component.css","webpack:///./src/app/room-view/room-view.component.html","webpack:///./src/app/room-view/room-view.component.ts","webpack:///./src/app/rooms/rooms.component.css","webpack:///./src/app/rooms/rooms.component.html","webpack:///./src/app/rooms/rooms.component.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/dbbackend.service.ts","webpack:///./src/app/services/room.service.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<base href=\\\"/\\\">\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, EventEmitter, HostListener, HostBinding } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http'\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatSelectModule,\n  MatButtonModule,\n  MatInputModule,\n  MatExpansionModule,\n  } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { RoomsComponent } from './rooms/rooms.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { LoginComponent } from './login/login.component';\n\nimport { environment } from '../environments/environment';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AuthService } from './services/auth.service';\nimport { DashComponent } from './dash/dash.component';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { DbbackendService } from './services/dbbackend.service';\nimport { SignupComponent } from './signup/signup.component';\nimport { RoomService } from './services/room.service';\nimport { RoomViewComponent } from './room-view/room-view.component';\n\nconst appRoutes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'view', component: RoomViewComponent, canActivate: [AuthGuardService]},\n  { path: 'signup', component: SignupComponent },\n  { path: '', redirectTo: '/home', pathMatch: 'full'},\n  { path: '**', component: PageNotFoundComponent }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    RoomsComponent,\n    PageNotFoundComponent,\n    LoginComponent,\n    DashComponent,\n    SignupComponent,\n    RoomViewComponent\n  ],\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n    ),\n    AngularFireModule.initializeApp(environment.firebase, 'angular-auth-firebase'),\n    AngularFireAuthModule,\n    BrowserModule,\n    HttpModule,\n    HttpClientModule,\n    NgbModule.forRoot(),\n    MatSelectModule,\n    MatButtonModule,\n    MatInputModule,\n    MatExpansionModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule\n  ],\n  providers: [AuthService, AuthGuardService, DbbackendService, RoomService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>{{ mate | json }}</p>\\n\\n<ng-template #roomInfo let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Room Info</h4>\\n    <button class=\\\"close\\\" type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"modal-body\\\">\\n    <form action=\\\"\\\" class=\\\"form-horizontal\\\" [formGroup]=\\\"form\\\">\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <label for=\\\"roomName\\\" class=\\\"control-label required\\\">Room name:</label>\\n          <input type=\\\"text\\\" id=\\\"roomName\\\" class=\\\"form-control\\\" formControlName=\\\"roomName\\\">\\n          <div class=\\\"err\\\" *ngIf=\\\"!this.form.get('roomName').valid && this.form.get('roomName').touched\\\">\\n            Please Enter a Room Name\\n          </div>\\n        </div>\\n      </div>\\n\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button mat-raised-button type=\\\"button\\\" [disabled]=\\\"!form.valid\\\" (click)=\\\"createRoom(); c('Close click')\\\">Create</button>\\n    <button mat-button type=\\\"button\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n\\n<ng-template #joinRoomModal let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Join Room</h4>\\n    <button class=\\\"close\\\" type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"modal-body\\\">\\n    <form action=\\\"\\\" class=\\\"form-horizontal\\\" [formGroup]=\\\"joinForm\\\">\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <label for=\\\"roomKey\\\" class=\\\"control-label required\\\">Room key:</label>\\n          <input type=\\\"text\\\" id=\\\"roomKey\\\" class=\\\"form-control\\\" formControlName=\\\"roomKey\\\">\\n          <div class=\\\"err\\\" *ngIf=\\\"!this.joinForm.get('roomKey').valid && this.joinForm.get('roomKey').touched\\\">\\n            Please Enter a Room Key\\n          </div>\\n        </div>\\n      </div>\\n\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button mat-raised-button type=\\\"button\\\" [disabled]=\\\"!joinForm.valid\\\" (click)=\\\"joinRoom(); c('Close click')\\\">Join</button>\\n    <button mat-button type=\\\"button\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n\\n\\n<mat-form-field *ngIf=\\\"this.mate.rooms.length > 0\\\">\\n  <mat-select [(value)]=\\\"selectedRoomId\\\" (selectionChange)=\\\"selectRoom()\\\">\\n    <mat-option *ngFor=\\\"let room of this.mate.rooms\\\" [value]=\\\"room._id\\\">{{ room.name }}</mat-option>\\n  </mat-select>\\n</mat-form-field>\\n<button mat-button (click)=\\\"createRoomModal(roomInfo)\\\">Create Room</button>\\n<button mat-button (click)=\\\"createRoomModal(joinRoomModal)\\\">Join Room</button>\"","import { Component, OnInit, HostListener, EventEmitter, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DbbackendService, Mate } from '../services/dbbackend.service';\nimport { RoomService, Room } from '../services/room.service';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { EmailValidator } from '@angular/forms';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-dash',\n  templateUrl: './dash.component.html',\n  styleUrls: ['./dash.component.css']\n})\nexport class DashComponent implements OnInit {\n  constructor(private modalService: NgbModal, private roomservice: RoomService, private router: Router, \n    private dbbackendservice: DbbackendService, private formBuilder: FormBuilder) { }\n\n  mate: Mate = this.dbbackendservice.returnUser();\n  form: FormGroup;\n  joinForm: FormGroup;\n  selectedRoomId;\n\n  ngOnInit() {\n    this.dbbackendservice.trackMate.subscribe(currentMate => {\n      this.mate = currentMate;\n    });\n\n    this.form = this.formBuilder.group({\n      roomName: [null, [Validators.required]]\n    });\n\n    this.joinForm = this.formBuilder.group({\n      roomKey: [null, [Validators.required]]\n    });\n  }\n\n  createRoomModal(content){\n    this.modalService.open(content, {centered: true});\n  }\n\n  createRoom(){\n    let name = this.form.value.roomName.trim();\n    let admin = new Mate();\n    admin._id = this.mate._id;\n    admin.name = this.mate.name;\n\n    this.roomservice.createRoom(name, admin).then(() => {\n      this.dbbackendservice.getMate(this.mate._id) //Just updates the user's info\n    });\n  }\n\n  @HostListener('switch')\n  selectRoom(){\n    this.roomservice.loadRoom(this.selectedRoomId).catch(err => console.log(err));\n  }\n\n  joinRoom(){\n    let key = this.joinForm.value.roomKey.trim();\n    let userid = this.mate._id;\n    let name = this.mate.name;\n\n    this.roomservice.joinRoom(userid, name, key);\n  }\n}\n","module.exports = \"\"","module.exports = \"<button (click)=\\\"goToLogin()\\\">Login</button>\\r\\n<button (click)=\\\"goToSignup()\\\">Sign up</button>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  goToLogin(){\n    this.router.navigate(['login']);\n  }\n\n  goToSignup(){\n    this.router.navigate(['signup']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  login works!\\n</p>\\n<form class=\\\"form-horizontal\\\" [formGroup]=\\\"form\\\">\\n  \\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <label for=\\\"email\\\" class=\\\"control-label\\\">Email</label>\\n      <input type=\\\"text\\\" id=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\">\\n      <div class=\\\"err\\\" *ngIf=\\\"!this.form.get('email').valid && this.form.get('email').touched\\\">\\n        Please Enter a Valid Email\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <label for=\\\"password\\\" class=\\\"control-label\\\">Password</label>\\n      <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\">\\n    </div>\\n  </div>\\n\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!form.valid\\\" (click)=\\\"signInWithEmail()\\\">Login</button>\\n  <button class=\\\"btn\\\" (click)=\\\"reset()\\\">Clear</button>\\n\\n  <div class=\\\"err\\\" *ngIf=\\\"loginFailed\\\">\\n    Email or password is incorrect\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { DbbackendService } from '../services/dbbackend.service';\nimport { FormGroup, FormBuilder, Validators, FormControl, ReactiveFormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n  loginFailed = false;\n\n  constructor(private authService: AuthService, private router: Router, private dbbackendservice: DbbackendService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: [null, Validators.required],\n      password: [null, Validators.required]\n    });\n  }\n\n  signInWithEmail(){\n    this.loginFailed = false;\n    let email = this.form.value.email.trim();\n    let password = this.form.value.password;\n    this.authService.signInRegular(email, password).then((res) => {\n      console.log(res);\n      this.dbbackendservice.getMateByEmail(email).then(res => {\n        console.log(res);\n        this.router.navigate(['view']);\n      }).catch(err => {\n        console.log(err);\n        this.loginFailed = true;\n        this.authService.logout();\n      })\n    }).catch((err) => {\n      console.log('error: ' + err);\n      this.loginFailed = true;\n    });\n  }\n\n  reset(){\n    this.form.reset();\n  }\n}","module.exports = \"\"","module.exports = \"<p>\\n  page-not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-dash></app-dash>\\n\\n<p>{{ room | json }}</p>\\n\\n<button *ngIf=\\\"this.room\\\" mat-button (click)=\\\"createRoomModal(inviteModal)\\\">Invite Mate</button>\\n<ng-template #inviteModal let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\">Invite</h4>\\n    <button class=\\\"close\\\" type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"modal-body\\\">\\n    <form action=\\\"\\\" class=\\\"form-horizontal\\\" [formGroup]=\\\"emailInviteForm\\\">\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <label for=\\\"emailInvite\\\" class=\\\"control-label required\\\">Email:</label>\\n          <input type=\\\"email\\\" id=\\\"emailInvite\\\" class=\\\"form-control\\\" formControlName=\\\"emailInvite\\\">\\n          <div class=\\\"err\\\" *ngIf=\\\"!this.emailInviteForm.get('emailInvite').valid && this.emailInviteForm.get('emailInvite').touched\\\">\\n            Please Enter a valid email\\n          </div>\\n        </div>\\n      </div>\\n\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button mat-raised-button type=\\\"button\\\" [disabled]=\\\"!emailInviteForm.valid\\\" (click)=\\\"inviteMate(); c('Close click')\\\">Invite</button>\\n    <button mat-button type=\\\"button\\\" (click)=\\\"c('Close click')\\\">Close</button>\\n  </div>\\n</ng-template>\\n\\n<mat-form-field *ngIf=\\\"this.room\\\">\\n  <mat-select [(value)]=\\\"selectedMateId\\\" (change)=\\\"selectMate()\\\">\\n    <mat-option *ngFor=\\\"let mate of this.mates\\\" [value]=\\\"mate._id\\\">{{ mate.name }}</mat-option>\\n  </mat-select>\\n</mat-form-field>\\n\\n<div *ngIf=\\\"this.selectedMateId\\\">\\n  {{ selectedMate | json }}\\n  <h1 *ngIf=\\\"this.selectedMate.owed > 0\\\">You owe {{this.selectedMate.name}} ${{this.selectedMate.owed}}</h1>\\n  <h1 *ngIf=\\\"this.selectedMate.owed < 0\\\">{{this.selectedMate.name}} owes you ${{this.selectedMate.owed}}</h1>\\n  <h1 *ngIf=\\\"this.selectedMate.owed == 0\\\">No money owed between you and {{this.selectedMate.name}}</h1>\\n\\n  <mat-accordion>\\n    <mat-expansion-panel>\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>Give money to {{this.selectedMate.name}}</mat-panel-title>\\n      </mat-expansion-panel-header>\\n\\n      <mat-form-field [formGroup]=\\\"sendMoneyForm\\\">\\n\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-lg\\\">\\n              <label for=\\\"moneyReason\\\" class=\\\"control-label required\\\">Reason:</label>\\n              <input matInput type=\\\"text\\\" id=\\\"moneyReason\\\" class=\\\"form-control\\\" formControlName=\\\"moneyReason\\\">\\n              <div class=\\\"err\\\" *ngIf=\\\"!this.sendMoneyForm.get('moneyReason').valid && this.sendMoneyForm.get('moneyReason').touched\\\">\\n                Please Enter a reason for this transaction;\\n              </div>\\n            </div>\\n          </div>\\n      </mat-form-field>\\n      <mat-form-field [formGroup]=\\\"sendMoneyForm\\\">\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-lg\\\">\\n              <label for=\\\"amount\\\" class=\\\"control-label required\\\">Amount:</label>\\n              <input matInput type=\\\"number\\\" min=\\\"0\\\" id=\\\"amount\\\" formControlName=\\\"amount\\\" class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n      </mat-form-field>\\n      <button mat-raised-button type=\\\"button\\\" [disabled]=\\\"!sendMoneyForm.valid\\\" (click)=\\\"sendMoney()\\\">Give money</button>\\n    </mat-expansion-panel>\\n  </mat-accordion>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DbbackendService, Mate } from '../services/dbbackend.service';\nimport { RoomService, Room } from '../services/room.service';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { EmailValidator } from '@angular/forms';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-room-view',\n  templateUrl: './room-view.component.html',\n  styleUrls: ['./room-view.component.css']\n})\nexport class RoomViewComponent implements OnInit {\n  room: Room;\n  mates: Array<any>;\n  selectedMate: any = null;\n  selectedMateId: string = null;\n  selectedMateIndex: number;\n  emailInviteForm: FormGroup;\n  sendMoneyForm: FormGroup;\n\n  constructor(private roomService: RoomService, private modalService: NgbModal, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.roomService.changeRoom.subscribe(currentRoom => {\n      this.room = currentRoom;\n      this.mates = this.roomService.allMates();\n    });\n\n    this.emailInviteForm = this.formBuilder.group({\n      emailInvite: [null, [Validators.required, Validators.email]]\n    });\n\n    this.sendMoneyForm = this.formBuilder.group({\n      amount: [null, [Validators.required]],\n      moneyReason: [null, [Validators.required]]\n    });\n  }\n\n  createRoomModal(content){\n    this.modalService.open(content, {centered: true});\n  }\n\n  selectMate(){\n    this.selectedMateIndex = this.mates.findIndex(item => item._id == this.selectedMateId);\n    this.selectedMate = this.mates[this.selectedMateIndex];\n  }\n\n  inviteMate(){\n    this.roomService.inviteMate(this.emailInviteForm.value.emailInvite.trim());\n  }\n\n  sendMoney(){\n    let toid = this.selectedMateId;\n    let roomid = this.room._id;\n    let amount = this.sendMoneyForm.value.amount;\n    let reason = this.sendMoneyForm.value.moneyReason;\n\n    this.roomService.sendMoney(roomid, toid, amount, reason);\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  rooms works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rooms',\n  templateUrl: './rooms.component.html',\n  styleUrls: ['./rooms.component.css']\n})\nexport class RoomsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router, CanActivate } from '@angular/router';\n\n@Injectable()\nexport class AuthGuardService {\n\n  constructor(private router: Router, private authService: AuthService) { }\n\n  canActivate(){\n    if(this.authService.isLoggedIn()){\n      return true;\n    }\n    this.router.navigate(['/']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport * as firebase from 'firebase/app';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthService {\n  private user: Observable<firebase.User>;\n  private userDetails: firebase.User = null;\n\n  constructor(private _firebaseAuth: AngularFireAuth, private router: Router) {\n    this.user = _firebaseAuth.authState;\n    this.user.subscribe((user) => {\n      if(user){\n        this.userDetails = user;\n      }else{\n        this.userDetails = null;\n      }\n    });\n  }\n\n  signInRegular(email, password){\n    const credential = firebase.auth.EmailAuthProvider.credential(email, password);\n\n    return this._firebaseAuth.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  isLoggedIn(){\n    if(this.userDetails == null){\n      return false;\n    }else{\n      return true;\n    }\n  }\n\n  logout(){\n    this._firebaseAuth.auth.signOut().then();\n  }\n\n  returnEmail(){\n    return this._firebaseAuth.auth.currentUser.email;\n  }\n\n  createUser(name, email, password){\n    return this._firebaseAuth.auth.createUserWithEmailAndPassword(email, password)\n  }\n\n  deleteUser(){\n    return this.userDetails.delete();\n  }\n}\n","import { Injectable, EventEmitter, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpErrorResponse, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { Http, HttpModule } from '@angular/http';\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport { catchError, retry } from 'rxjs/operators';\n\nexport interface Mate{\n  _id: string;\n  name: string;\n  email: string;\n  rooms: Array<{_id: string, name: string}>;\n}\n\nexport class Mate implements Mate{}\n\nexport interface Transaction{\n  _id: string;\n  title: string;\n  description: string;\n  roomid: string;\n  fromid: string;\n  toid: string;\n  amount: number;\n  date: Date;\n}\n\nexport class Transaction implements Transaction{}\n\n@Injectable()\nexport class DbbackendService {\n  @Output() trackMate: EventEmitter<Mate> = new EventEmitter();\n\n  private url = 'http://localhost:80/api';\n  private currentUser: Mate = null;\n\n  constructor(private http: HttpClient) { }\n\n  returnUser(){\n    return this.currentUser;\n  }\n\n  returnUserId(){\n    return this.currentUser._id\n  }\n\n  returnUserName(){\n    return this.currentUser.name;\n  }\n\n  async createMate(name: string, email: string){\n    let thisUrl = this.url + '/mate/create';\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    let user: Mate = new Mate();\n    user.name = name;\n    user.email = email;\n\n    let result = await new Promise((resolve, reject) => {\n      this.http.post<Mate>(thisUrl, user, httpOptions)\n      .pipe(\n        retry(3),\n        catchError((res) => this.handleError(res)),\n      ).subscribe(mate => {this.currentUser = mate as Mate; resolve('success')});\n    });\n    \n    if(result){\n      this.trackMate.emit(this.currentUser);\n      return 'Mate Created';\n    }else{\n      throw 'Error creating mate';\n    }\n  }\n\n  async getMate(id: string){\n    let thisUrl = this.url + '/mate/' + id;\n    let result = await new Promise((resolve, reject) => { \n      this.http.get<Mate>(thisUrl)\n      .pipe(\n        retry(3),\n        catchError((res) => this.handleError(res))\n      ).subscribe(mate => { this.currentUser = mate as Mate; resolve('success') });\n    });\n\n    if(result){\n      this.trackMate.emit(this.currentUser);\n      return result;\n    }else{\n      throw 'Unable to retrieve mate';\n    }\n  }\n\n  async getMateByEmail(email: string){\n    let thisUrl = this.url + '/mateEmail/' + email;\n\n    let result = await new Promise((resolve, reject) => {\n      this.http.get<Mate>(thisUrl)\n      .pipe(\n        retry(3),\n        catchError((res) => this.handleError(res))\n      ).subscribe(mate => {this.currentUser = mate as Mate; resolve('success')});\n    });\n\n    if(result){\n      this.trackMate.emit(this.currentUser);\n      return 'Mate retrieved';\n    }else{\n      throw 'Unable to retrieve mate';\n    }\n  }\n\n  createTransaction(title: string, description: string, fromid: string, toid: string, amount: number){\n\n  }\n\n  getTransaction(id: string){\n\n  }\n\n  handleError(error: HttpErrorResponse){\n    if(error.error instanceof ErrorEvent){\n      console.error('Error occurred:', error.error.message);\n    }else{\n      console.error(`Backend returned code ${error.status}, body was: ${JSON.stringify(error.error)}`);\n    }\n\n    return new ErrorObservable();\n  }\n}","import { Injectable, EventEmitter, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpErrorResponse, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { Http, HttpModule } from '@angular/http';\nimport { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport { catchError, retry } from 'rxjs/operators';\nimport { DbbackendService, Mate, Transaction } from '../services/dbbackend.service';\n\nexport interface Room{\n  _id: string;\n  name: string;\n  balances: Array<{aid: string, bid: string, aname: string, bname: string, owed: number}>;\n  admin: genericId;\n  recentlyAdded: genericId;\n  count: number;\n  key: string;\n}\n\nexport interface genericId{\n  id: string,\n  name: string\n}\n\nexport class genericId implements genericId{\n}\n\nexport class Room implements Room{\n  admin = new genericId();\n  recentlyAdded = new genericId();\n}\n\n@Injectable()\nexport class RoomService {\n  @Output() changeRoom: EventEmitter<Room> = new EventEmitter();\n\n  private url = 'http://localhost:80/api';\n  private currentRoom: Room = null;\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  constructor(private http: HttpClient, private dbbackendservice: DbbackendService) { }\n\n  returnRoom(){\n    return this.currentRoom;\n  }\n\n  async createRoom(name: string, creator: Mate){\n    let thisUrl = this.url + '/room/create';\n    \n    let room: Room = new Room();\n    room.name = name;\n    room.admin.id = creator._id;\n    room.admin.name = creator.name;\n\n    let result = await new Promise((resolve, reject) => { \n      this.http.post<Room>(thisUrl, room, this.httpOptions)\n      .pipe(\n        retry(3),\n        catchError((res) => this.dbbackendservice.handleError(res)),\n      ).subscribe(room => {resolve('Room created')});\n    });\n\n    if(result){\n      return 'Room created';\n    }else{\n      throw 'Unable to create room';\n    }\n  }\n\n  async loadRoom(id: string){\n    let thisUrl = this.url + '/room/' + id;\n\n    let result = await new Promise((resolve, reject) => { \n      this.http.get<Room>(thisUrl)\n      .pipe(\n        retry(3),\n        catchError((res) => this.dbbackendservice.handleError(res))\n      ).subscribe(room => {this.currentRoom = room as Room; resolve('success')});\n    });\n\n    if(result){\n      this.changeRoom.emit(this.currentRoom);\n      return this.currentRoom;\n    }else{\n      throw 'Unable to load room';\n    }\n  }\n\n  async joinRoom(id: string, name: string, key: string){\n    let thisUrl = this.url + '/joinRoom';\n    let userId = this.dbbackendservice.returnUserId();\n\n    let info: any;\n\n    info.id = id;\n    info.name = name;\n    info.roomKey = key;\n\n    let result = await new Promise((resolve, reject) => {\n      this.http.post<Room>(thisUrl, info, this.httpOptions)\n      .pipe(\n        retry(3),\n        catchError((res) => this.dbbackendservice.handleError(res))\n      ).subscribe(room => { this.dbbackendservice.getMate(userId)}); // refresh user's rooms\n    });\n\n    if(result){\n      return 'Room joined';\n    }else{\n      throw 'Unable to join room';\n    }\n  }\n\n  allMates(){\n    let balances = new Array();\n    let userId = this.dbbackendservice.returnUserId();\n    for(let balance of this.currentRoom.balances){\n      if(balance.aid == userId){\n        balances.push({_id: balance.bid, name: balance.bname, owed: balance.owed});\n      }else if(balance.bid == userId){\n        balances.push({_id: balance.aid, name: balance.aname, owed: -balance.owed});\n      }\n    }\n\n    return balances;\n  }\n\n  async inviteMate(email: string){\n    let thisUrl = this.url + '/userMgmt/invite';\n\n    let info: any = {email: '', inviter: '', room: '', roomKey: ''};\n    info.email = email;\n    info.inviter = this.dbbackendservice.returnUserName();\n    info.room = this.currentRoom.name;\n    info.roomKey = this.currentRoom.key;\n\n    let result = await new Promise((resolve, reject) => {\n      this.http.post<JSON>(thisUrl, info, this.httpOptions)\n      .pipe(\n        retry(3),\n        catchError((res) => this.dbbackendservice.handleError(res))\n      ).subscribe(json => resolve(json));\n    });\n  }\n\n  async sendMoney(roomid: string, toid: string, amount: number, reason: string){\n    let thisUrl = this.url + '/transaction/create';\n\n    let transaction: Transaction = new Transaction();\n    transaction.amount = amount;\n    transaction.roomid = roomid;\n    transaction.toid = toid;\n    transaction.fromid = this.dbbackendservice.returnUserId();\n    transaction.title = reason;\n\n    let result = await new Promise((resolve, reject) => {\n      this.http.post<Transaction>(thisUrl, transaction, this.httpOptions)\n      .pipe(\n        retry(3),\n        catchError((res) => this.dbbackendservice.handleError(res))\n      ).subscribe(transaction => resolve(transaction));\n    });\n\n    if(result){\n      this.loadRoom(this.currentRoom._id);\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  signup works!\\n</p>\\n<form action=\\\"\\\" class=\\\"form-horizontal\\\" [formGroup]=\\\"form\\\">\\n\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <label for=\\\"name\\\" class=\\\"control-label required\\\">Name</label>\\n      <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\">\\n      <div class=\\\"err\\\" *ngIf=\\\"!this.form.get('name').valid && this.form.get('name').touched\\\">\\n        Please Enter a Name\\n      </div>     \\n    </div>  \\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <label for=\\\"email\\\" class=\\\"control-label required\\\">Email</label>\\n      <input type=\\\"text\\\" id=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\">\\n      <div class=\\\"err\\\" *ngIf=\\\"!this.form.get('email').valid && this.form.get('email').touched\\\">\\n        Please Enter a Valid Email\\n      </div> \\n    </div>  \\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <label for=\\\"password\\\" class=\\\"control-label required\\\">Password</label>\\n      <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\">\\n      <div class=\\\"err\\\" *ngIf=\\\"!this.form.get('password').valid && this.form.get('password').touched\\\">\\n        Please enter a password  with 6 or more characters\\n      </div> \\n    </div>  \\n  </div>\\n\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"signUp()\\\" [disabled]=\\\"!form.valid\\\">\\n    Sign up\\n  </button>\\n  <button class=\\\"btn\\\" (click)=\\\"reset()\\\">Clear</button>\\n\\n  <div class=\\\"err\\\" *ngIf=\\\"emailTaken\\\">\\n    Email already in use.\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { DbbackendService } from '../services/dbbackend.service';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  user = {\n    name: '',\n    email: '',\n    password: ''\n  };\n\n  form: FormGroup;\n  emailTaken = false;\n\n  constructor(private authService: AuthService, private router: Router, private dbbackendservice: DbbackendService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      name: [null, [Validators.required]],\n      email: [null, [Validators.required, Validators.email]],\n      password: [null, [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  signUp(){\n    this.emailTaken = false;\n    let name = this.form.value.name.trim();\n    let email = this.form.value.email.trim();\n    let password = this.form.value.password;\n\n    this.authService.createUser(name, email, password).then(res => {\n      res.updateProfile({displayName: name});\n      this.authService.signInRegular(email, password).then(res => {\n        console.log(res);\n        this.dbbackendservice.createMate(name, email).then(res => {\n          console.log(res);\n          this.router.navigate(['view']);\n        }).catch(err => {\n          console.log('Error creating mate');\n          this.authService.deleteUser();\n        });\n        \n      }).catch((err) => console.log('error: ' + err));\n    }).catch((err) => { \n      console.log('error: ' + err);\n      this.emailTaken = true;\n    });\n  }\n\n  reset(){\n    this.form.reset();\n  }\n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyD34j1ps1AQQiwriJsdMauxsmzZUGX5SA8\",\n    authDomain: \"roomio-63fc5.firebaseapp.com\",\n    databaseURL: \"https://roomio-63fc5.firebaseio.com\",\n    projectId: \"roomio-63fc5\",\n    storageBucket: \"roomio-63fc5.appspot.com\",\n    messagingSenderId: \"138792748529\"\n  }\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}